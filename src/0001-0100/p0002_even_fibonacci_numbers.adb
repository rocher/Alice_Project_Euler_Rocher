-------------------------------------------------------------------------------
--
--  ALICE - Adventures for Learning and Inspiring Coding Excellence
--  Copyright (c) 2023 Francesc Rocher <francesc.rocher@gmail.com>
--  SPDX-License-Identifier: MIT
--
--  ---------------------------------------------------------------------------
--
--  The following problem is taken from Project Euler:
--
--                 https://projecteuler.net/problem=2
--
--  Even Fibonacci numbers
--  ----------------------
--
--  Each new term in the Fibonacci sequence is generated by adding the
--  previous two terms. By starting with 1 and 2, the first 10 terms will be:
--
--                 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
--
--  By considering the terms in the Fibonacci sequence whose values do not
--  exceed four million, find the sum of the even-valued terms.
--
-------------------------------------------------------------------------------

with Euler_Tools; use Euler_Tools;

package body P0002_Even_Fibonacci_Numbers is

   overriding function Answer
     (Problem : in out Problem_Type; Notes : in out Unbounded_String)
      return String
   is
      Number  : Integer_Type := Fibonacci_Start;
      Counter : Natural      := 0;
      Answer  : Integer_Type := 0;
   begin
      loop
         if Is_Even (Number) then
            Answer  := @ + Number;
            Counter := @ + 1;
         end if;
         Number := Fibonacci_Next;
         exit when Number > 4_000_000;
      end loop;

      Notes :=
        To_Unbounded_String
          ("There are" & Counter'Image & " even Fibonacci numbers < 4000000");

      return To_String (Answer);
   end Answer;

end P0002_Even_Fibonacci_Numbers;
